<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Demo.Interface">
    <!--  Style  -->
    <Style x:Key="InputBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style x:Key="HintStyle" TargetType="TextBlock">
        <Setter Property="Opacity" Value="0.4" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>
    <Style x:Key="MessageStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="42" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <!--  Brush  -->
    <SolidColorBrush x:Key="InvalidBrush" Color="#FFFFF2F4" />
    <SolidColorBrush x:Key="ValidBrush" Color="White" />
    <SolidColorBrush x:Key="DoneBrush" Color="#FFCAEECA" />
    <SolidColorBrush x:Key="ReplayBrush" Color="LightYellow" />

    <!--  Template  -->
    <DataTemplate DataType="{x:Type vm:IWaitingFrame}">
        <TextBlock Style="{StaticResource MessageStyle}" Text="Typing Practice" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:IInputFrame}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TextBox x:Name="uxBox"
                     Style="{StaticResource InputBox}"
                     Text="{Binding Path=UserText, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Style="{StaticResource HintStyle}">
                <Run Foreground="Transparent" Text="{Binding Path=UserText, Mode=OneWay}" />
                <Run Text="{Binding Path=HintText, Mode=OneWay}" />
            </TextBlock>
            <TextBlock x:Name="uxMessage" Style="{StaticResource MessageStyle}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=State}" Value="{x:Static vm:InputFrameState.Valid}">
                <Setter TargetName="uxBox" Property="Background" Value="{StaticResource ValidBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=State}" Value="{x:Static vm:InputFrameState.Invalid}">
                <Setter TargetName="uxBox" Property="Background" Value="{StaticResource InvalidBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=State}" Value="{x:Static vm:InputFrameState.Done}">
                <Setter TargetName="uxBox" Property="Background" Value="{StaticResource DoneBrush}" />
                <Setter TargetName="uxBox" Property="IsEnabled" Value="False" />
                <Setter TargetName="uxMessage" Property="Text" Value="Done" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:IReplayFrame}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TextBox x:Name="uxBox"
                     IsReadOnly="True"
                     Style="{StaticResource InputBox}"
                     Text="{Binding Path=ReplayingText, Mode=OneWay}" />
            <TextBlock Style="{StaticResource HintStyle}">
                <Run Foreground="Transparent" Text="{Binding Path=ReplayingText, Mode=OneWay}" />
                <Run Text="{Binding Path=HintText, Mode=OneWay}" />
            </TextBlock>
            <TextBlock x:Name="uxMessage" Style="{StaticResource MessageStyle}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=State}" Value="{x:Static vm:ReplayFrameState.Replaying}">
                <Setter TargetName="uxBox" Property="Background" Value="{StaticResource ReplayBrush}" />
                <Setter TargetName="uxMessage" Property="Text" Value="Replaying..." />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=State}" Value="{x:Static vm:ReplayFrameState.Done}">
                <Setter TargetName="uxBox" Property="Background" Value="{StaticResource DoneBrush}" />
                <Setter TargetName="uxMessage" Property="Text" Value="Done" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>